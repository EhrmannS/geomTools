% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geometr-package.R
\docType{package}
\name{geometr}
\alias{geometr}
\alias{geometr-package}
\title{geometr: Generate and Process Geometric Shapes}
\description{
The geometr package provides tools that generate and process highly
accessible, tidy geometric shapes. Moreover, it aims to improve
interoperability of spatial and other geometric classes. Those classes are
typically a collection of geometric shapes, or vertices that outline those
shapes, which are accompanied by various meta data. The classes are
conceptually very similar, yet they lack a common standard in providing
access to vetrices, features or meta data. Geometr fills this gap by
providing tools that have a unified interface and that produce an identical
output (socalled getters), irrespective of the treated class or that use an
indentical input to write to various classes that require different input
(socalled setters).
}
\examples{
library(sf)

# A geom can be created from other classes ...
nc_sf <- st_read(system.file("shape/nc.shp", package="sf"))
nc_geom <- gc_geom(input = nc_sf)

# ... or by hand
coords <- data.frame(x = c(40, 70, 70, 50),
                     y = c(40, 40, 60, 70))
window <- data.frame(x = c(0, 80),
                     y = c(0, 80))
(aGeom <- gs_polygon(anchor = coords, window = window))

# the "tiny map" shows where the vertices are concentrated
nc_geom

# Information, such as the attribute table, can be extracted from the object
# in interoperable quality
attr_sf <- getTable(x = nc_sf)
attr_geom <- getTable(x = nc_geom, slot = "feat")

# However, a `geom` has three attribute tables, one for vertices, one for
# features and one for groups of features. All of them (and not only
# features) can be filled with respective ancilliary information.
getTable(x = nc_geom, slot = "vert")
getTable(x = nc_geom, slot = "group")

# Groups of features are called *multi\\** features in other packages. By
# lumping several isolated geometric shapes into one multi\\* feature, the
# separate geometries can't be attributed with ancilliary information
# anymore. In a `geom`, multi\\* features are separated into distinct
# (simpler) features (that may contain holes), while the multi\\* information
#  is preserved in the variable `gid`.
currituck <- getSubset(x = nc_geom, gid == 4)
getTable(x = currituck, slot = "feat")
getTable(x = currituck, slot = "group")

# A geom can be visualised ...
visualise(`North Carolina` = nc_geom)
visualise(`NC - NWBIR74` = nc_geom, linecol = NWBIR74)

# And it can be cast into another type simply by providing it in 'anchor'
manyPoints <- gs_point(anchor = nc_geom)

}
