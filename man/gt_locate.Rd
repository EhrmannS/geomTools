% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gt_locate.R
\name{gt_locate}
\alias{gt_locate}
\title{Locate (and identify) clicks}
\usage{
gt_locate(samples = 1, panel = NULL, identify = FALSE,
  snap = FALSE, raw = FALSE, show = TRUE, ...)
}
\arguments{
\item{samples}{[\code{integerish(1)}]\cr the number of clicks.}

\item{panel}{[\code{character(1)}]\cr the panel in which to locate (i.e. the
title shown over the plot). Does not have to be accurate, as it matches
with \code{\link{grep}}.}

\item{identify}{[\code{logical(1)}]\cr get the raster value at the sampled
location (\code{TRUE}) or merely the location (\code{FALSE}, default).}

\item{snap}{[\code{logical(1)}]\cr should the returned value(s) be set to the
nearest grid cell's center (\code{TRUE}) or should they remain the
selected, "real" value (\code{FALSE}, default)?}

\item{raw}{[\code{logical(1)}]\cr should the complete statistics about the
clicks be returned (\code{TRUE}), or should only the basic output be
returned (\code{FALSE}, default)?}

\item{show}{[\code{logical(1)}]\cr should information about the selected
cells be included in the plot (\code{TRUE}), or should they merely be
returned in the console (\code{FALSE, default})?}

\item{...}{[\code{various}]\cr graphical parameters of the objects that are
created when \code{show = TRUE}.}
}
\value{
a \code{data.frame} of the selected locations and, if \code{identify
  = TRUE}, the respective values. If \code{show = TRUE} the values are also
  shown in the plot.
}
\description{
Click into a plot to get the location or identify values
}
\examples{
\dontrun{
# define a geometry
coords <- data.frame(x = c(30, 60, 60, 40),
                     y = c(40, 40, 60, 70),
                     fid = 1)
window <- data.frame(x = c(0, 80),
                     y = c(0, 80))
(aGeom <- gs_polygon(anchor = coords, window = window, col = "blue"))

# locate coordinates with geoms
visualise(geom = aGeom)
gt_locate(samples = 2)

# locate or identify values with rasters
visualise(raster = gtRasters$continuous)
gt_locate(identify = TRUE, snap = TRUE)

# with several panels, specify a target
visualise(raster = raster::stack(gtRasters$continuous, gtRasters$categorical))
gt_locate(samples = 4, panel = "categorical", snap = TRUE, identify = TRUE, show = TRUE)
}
}
