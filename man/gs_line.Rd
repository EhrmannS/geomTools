% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gs_line.R
\name{gs_line}
\alias{gs_line}
\title{Create a line geometry}
\usage{
gs_line(anchor = NULL, window = NULL, template = NULL,
  features = 1, vertices = NULL, ...)
}
\arguments{
\item{anchor}{[\code{data.frame(1)}]\cr Object to derive the \code{geom}
from. It must include column names \code{x}, \code{y} and optinal variables
such as \code{fid}; see Examples.}

\item{window}{[\code{data.frame(1)}]\cr in case the reference window deviates
from the bounding box of \code{anchor} (minimum and maximum values),
specify this here.}

\item{template}{[\code{RasterLayer(1)} | \code{matrix(1)}]\cr Gridded object
that serves as template to sketch the geometry.}

\item{features}{[\code{integerish(1)}]\cr number of geometries to create.}

\item{vertices}{[\code{integerish(.)}]\cr number of vertices per geometry;
will be recycled if it does not have as many elements as specified in
\code{features}.}

\item{...}{[various]\cr graphical parameters to \code{\link{locate}}, in case
points are sketched; see \code{\link{gpar}}.}
}
\value{
An invisible \code{geom}.
}
\description{
Create a line geometry (of class \code{\link{geom}}) either by specifying its
parameters or by sketching it.
}
\details{
The arguments \code{anchor} and \code{template} indicate how the
  geometry is created: \itemize{ \item \code{anchor}: if set, the geometry is
  created parametrically, the input provided is used to parameterise the
  geometry. \item \code{template}: if set, the geometry is created
  interactively, by clicking into the plot.}
}
\examples{
library(magrittr)

# create a points programmatically
coords <- data.frame(x = c(40, 70, 70, 50),
                     y = c(40, 40, 60, 70))
window <- data.frame(x = c(0, 80),
                     y = c(0, 80))

# if no window is set, the bounding box (i.e. min/max values) will be set as window
(aGeom <- gs_line(anchor = coords))

# the vertices are plottet relative to the window
visualise(geom = gs_line(anchor = coords))
gs_line(anchor = coords, window = window) \%>\%
  visualise(geom = ., linecol = "green", new = FALSE)

# when a geom is used in 'anchor', its properties (e.g. 'window') are passed on
aGeom <- setWindow(x = aGeom, to = window)
gs_line(anchor = aGeom) \%>\%
  visualise(geom = ., linecol = "deeppink")

\dontrun{

input <- gtRasters$continuous

# create points interactively
myLine <- gs_line(template = input, vertices = 5)
visualise(geom = myLine, linecol = "deeppink", new = FALSE)

anExtent <- gs_rectangle(myLine)
visualise(geom = anExtent, linecol = "green", new = FALSE)
}
}
\seealso{
Other shapes: \code{\link{gs_point}},
  \code{\link{gs_polygon}}, \code{\link{gs_random}}
}
\concept{shapes}
