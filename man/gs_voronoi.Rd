% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gs_voronoi.R
\name{gs_voronoi}
\alias{gs_voronoi}
\title{Create a voronoi tiling}
\usage{
gs_voronoi(anchor = NULL, window = NULL, template = NULL,
  features = 3, ...)
}
\arguments{
\item{anchor}{[\code{geom} | \code{data.frame(1)}]\cr Object to derive the
\code{geom} from. In case of \code{data.frame}, it must include column
names \code{x}, \code{y}, \code{fid} and optinal attributes; see Examples.}

\item{window}{[\code{data.frame(1)}]\cr in case the reference window deviates
from the bounding box of \code{anchor} (minimum and maximum values),
specify this here.}

\item{template}{[\code{RasterLayer(1)} | \code{matrix(1)}]\cr Gridded object
that serves as template to sketch the tiling.}

\item{features}{[\code{integerish(1)}]\cr number of tiles to create.}

\item{...}{[various]\cr graphical parameters to \code{\link{gt_locate}}, in case
the tiling is sketched; see \code{\link{gpar}}.}
}
\value{
An invisible \code{geom}.
}
\description{
Create a voronoi tiling
}
\examples{
library(magrittr)

# create voronoi polygons programmatically
coords <- data.frame(x = c(40, 70, 70, 50),
                     y = c(40, 40, 60, 70))
window <- data.frame(x = c(0, 80),
                     y = c(0, 80))
aGeom <- gs_point(anchor = coords, window = window)
visualise(geom = aGeom)

tiles <- gs_voronoi(anchor = aGeom) \%>\%
  visualise(geom = ., new = FALSE)

\dontrun{

input <- gtRasters$continuous

# create voronoi polygons interactively
tiles <- gs_voronoi(template = input)
visualise(geom = tiles, linecol = "orange", new = FALSE)
}
}
\seealso{
Other tilings: \code{\link{gs_tiles}}
}
\concept{tilings}
